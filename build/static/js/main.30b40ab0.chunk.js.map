{"version":3,"sources":["PersonList.js","PersonDetail.js","PersonEdit.js","PersonDelete.js","PersonCreate.js","App.js","serviceWorker.js","index.js"],"names":["src_PersonList","state","persons","url","_this2","this","fetch","then","response","ok","json","status","Error","concat","statusText","responseData","setState","catch","error","console","log","document","title","react_default","a","createElement","Link","className","to","PersonList_TableHeader","PersonList_TableBody","Component","TableHeader","TableBody","props","rows","map","person","index","PersonList_TableRow","key","TableRow","u","firstName","lastName","moment","birthDate","format","href","creditScore","index_es","icon","color","rating","_id","PersonDetail","httpStatusCode","httpStatusOk","_this","id","email","PersonEdit","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","handleSubmit","e","defineProperty","target","name","value","_this3","newPerson","method","headers","Content-Type","body","JSON","stringify","history","push","_this4","isDisabled","length","input","focus","htmlFor","placeholder","ref","i","onChange","type","min","max","disabled","onClick","withRouter","PersonDelete","PersonCreate","library","add","faExclamationCircle","faCheckCircle","App","App_Header","App_Navbar","Switch","Route","exact","path","render","App_Home","src_PersonCreate","src_PersonDetail","match","params","src_PersonEdit","src_PersonDelete","App_NotFound","Header","Navbar","Home","NotFound","Boolean","window","location","hostname","ReactDOM","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uTA8DAA,6MApDEC,MAAQ,CAAEC,QAAS,MAEnBC,IAAM,6IAEc,IAAAC,EAAAC,KAGlBC,MAAMD,KAAKF,KACRI,KAAK,SAAAC,GAGJ,GAAIA,EAASC,GAEX,OAAOD,EAASE,OACX,MAAwB,MAApBF,EAASG,OAEZC,MAAM,uBAGNA,MAAK,QAAAC,OAASL,EAASG,OAAlB,MAAAE,OAA6BL,EAASM,eAGpDP,KAAK,SAAAQ,GAGJX,EAAKY,SAAS,CAAEd,QAASa,MAI1BE,MAAM,SAAAC,GAELC,QAAQC,IAAIF,sCAQhB,OAFAG,SAASC,MAAQ,cAGfC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,kBAArC,qBACHL,EAAAC,EAAAC,cAAA,SAAOE,UAAU,uBACfJ,EAAAC,EAAAC,cAACI,EAAD,MACAN,EAAAC,EAAAC,cAACK,EAAD,CAAW5B,QAASG,KAAKJ,MAAMC,mBAjDhB6B,aA+DnBC,EAAc,WAClB,OACET,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,4BAQFQ,EAAY,SAACC,GAGjB,IAAIC,EAAOD,EAAMhC,QAAQkC,IAAI,SAACC,EAAQC,GACpC,OACEf,EAAAC,EAAAC,cAACc,EAAD,CAAUF,OAAQA,EAAQG,IAAKF,MAInC,OAAOf,EAAAC,EAAAC,cAAA,aAAQU,IAKXM,EAAW,SAAAP,GAGf,IAAMQ,EAAIR,EAAMG,OAMhB,OACEd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEC,UAAY,IAAMD,EAAEE,UAC3BrB,EAAAC,EAAAC,cAAA,UAAKoB,EAAOH,EAAEI,WAAWC,OAAO,eAChCxB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGuB,KAAMN,EAAEvC,KAAX,aACJoB,EAAAC,EAAAC,cAAA,UAAKiB,EAAEO,YAAaP,EAAEO,YAAc,KAAO1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAiBC,KAAK,eAAeC,MAAM,WACtF7B,EAAAC,EAAAC,cAAA,UAAKiB,EAAEW,OAAQX,EAAEW,OAAS,IAAM9B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAiBC,KAAK,qBAAqBC,MAAM,SACjF7B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAE,kBAAAf,OAAoB6B,EAAEY,MAA1D,WAAJ,WACM/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAE,gBAAAf,OAAkB6B,EAAEY,MAAxD,QADN,WAEM/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,iBAAiBC,GAAE,kBAAAf,OAAoB6B,EAAEY,MAAzD,aCnCGC,6MAzEbtD,MAAQ,CAAEoC,OAAQ,GAAImB,eAAgB,EAAGC,cAAc,KAEvDtD,sEAAiEuD,EAAKxB,MAAMyB,uFAExD,IAAAvD,EAAAC,KAGlBC,MAAMD,KAAKF,KACRI,KAAK,SAAAC,GAGJ,GADAJ,EAAKY,SAAS,CAAEwC,eAAgBhD,EAASG,OAAQ8C,aAAcjD,EAASC,KACpED,EAASC,GAEX,OAAOD,EAASE,OACX,MAAwB,MAApBF,EAASG,OAEZC,MAAM,uBAGNA,MAAK,QAAAC,OAASL,EAASG,OAAlB,MAAAE,OAA6BL,EAASM,eAGpDP,KAAK,SAAAQ,GAGJX,EAAKY,SAAS,CAAEqB,OAAQtB,MAIzBE,MAAM,SAAAC,GAELC,QAAQC,IAAIF,sCAKhBG,SAASC,MAAT,UAAAT,OAA2BR,KAAK6B,MAAMyB,GAAtC,WAGA,IAAMjB,EAAIrC,KAAKJ,MAAMoC,OAErB,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iCAAyBiB,EAAEC,UAA3B,IAAuCD,EAAEE,SAAzC,kCAICvC,KAAKJ,MAAMwD,aACVlC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBACZJ,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEC,UAAP,IAAmBD,EAAEE,UAClCrB,EAAAC,EAAAC,cAAA,wBAAmBF,EAAAC,EAAAC,cAAA,UAAKoB,EAAOH,EAAEI,WAAWC,OAAO,eACnDxB,EAAAC,EAAAC,cAAA,sBAAiBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGuB,KAAMN,EAAEvC,KAAX,aACrBoB,EAAAC,EAAAC,cAAA,2BAAsBF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEkB,OAC7BrC,EAAAC,EAAAC,cAAA,0BAAqBF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEO,YAAP,IAAqBP,EAAEO,YAAc,KAAO,UACjE1B,EAAAC,EAAAC,cAAA,yBAAoBF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEW,WAMjC9B,EAAAC,EAAAC,cAAA,2CAGFF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAE,iBAAAf,OAAmB6B,EAAEiB,KAAzD,QAAH,WACApC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,YAArC,iCAvEmBG,oCCDrB8B,cAEJ,SAAAA,EAAY3B,GAAO,IAAAwB,EAAA,OAAAI,OAAAC,EAAA,EAAAD,CAAAzD,KAAAwD,IACjBH,EAAAI,OAAAE,EAAA,EAAAF,CAAAzD,KAAAyD,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA7D,KAAM6B,KAQRjC,MAAQ,CAAEoC,OAAQ,GACRM,UAAW,GACXC,SAAU,GACVE,UAAW,GACXc,MAAO,GACPzD,IAAK,GACL8C,YAAa,GACbI,OAAQ,GACRG,eAAgB,EAChBC,cAAc,GAlBLC,EAqBnBvD,IArBmB,2DAAAU,OAqB8C6C,EAAKxB,MAAMyB,IAlB1ED,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAJ,KACpBA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAJ,KAJHA,4EAuBNa,GAEXlE,KAAKW,SAAL8C,OAAAU,EAAA,EAAAV,CAAA,GAAiBS,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,oDAKxB,IAAAvE,EAAAC,KAGlBC,MAAMD,KAAKF,KACRI,KAAK,SAAAC,GAGJ,GADAJ,EAAKY,SAAS,CAAEwC,eAAgBhD,EAASG,OAAQ8C,aAAcjD,EAASC,KACpED,EAASC,GAEX,OAAOD,EAASE,OACX,MAAwB,MAApBF,EAASG,OAEZC,MAAM,uBAGNA,MAAK,QAAAC,OAASL,EAASG,OAAlB,MAAAE,OAA6BL,EAASM,eAGpDP,KAAK,SAAAQ,GAGJX,EAAKY,SAAS,CAAEqB,OAAQtB,MAIzBE,MAAM,SAAAC,GAELC,QAAQC,IAAIF,0CAKLqD,GAAG,IAAAK,EAAAvE,KAERwE,EAAY,CAAEvB,IAAOjD,KAAKJ,MAAMoC,OAAOiB,IACzBX,UAAatC,KAAKJ,MAAM0C,UACxBC,SAAYvC,KAAKJ,MAAM2C,SACvBE,UAAazC,KAAKJ,MAAM6C,UACxBc,MAASvD,KAAKJ,MAAM2D,MACpBzD,IAAOE,KAAKJ,MAAME,IAClB8C,YAAe5C,KAAKJ,MAAMgD,YAC1BI,OAAWhD,KAAKJ,MAAMoD,QAG1C/C,MAAMD,KAAKF,IAAK,CACd2E,OAAQ,MACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KAEpBtE,KAAK,SAAAC,GACJ,GAAIA,EAASC,GAEX,OAAOD,EAASE,OACX,MAAIF,EAASG,QAAU,KAAOH,EAASG,OAEtCC,MAAK,QAAAC,OAASL,EAASG,OAAlB,MAAAE,OAA6BL,EAASM,eAMpDP,KAAK,SAAAQ,GAIJI,QAAQC,IAAIL,GAEZ6D,EAAK1C,MAAMkD,QAAQC,KAAnB,kBAAAxE,OAA0C+D,EAAK1C,MAAMyB,OAEtD1C,MAAM,SAAAC,GAELC,QAAQC,IAAIF,sCAKT,IAAAoE,EAAAjF,KACPgB,SAASC,MAAT,UAAAT,OAA2BR,KAAK6B,MAAMyB,GAAtC,SAGA,IAAM4B,EAA6C,IAAhClF,KAAKJ,MAAM0C,UAAU6C,QACU,IAA/BnF,KAAKJ,MAAM2C,SAAS4C,QACY,IAAhCnF,KAAKJ,MAAM6C,UAAU0C,QACa,IAAlCnF,KAAKJ,MAAMgD,YAAYuC,QACK,IAA5BnF,KAAKJ,MAAM2D,MAAM4B,QACY,IAA7BnF,KAAKJ,MAAMoD,OAAOmC,QACQ,IAA1BnF,KAAKJ,MAAME,IAAIqF,OAG5B9C,EAAIrC,KAAKJ,MAAMoC,OAOrB,OAJIhC,KAAKoF,OAAyC,IAAhCpF,KAAKJ,MAAM0C,UAAU6C,QAA+C,IAA/BnF,KAAKJ,MAAM2C,SAAS4C,QACzEnF,KAAKoF,MAAMC,QAIXnE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBAAiBiB,EAAEC,UAAnB,IAA+BD,EAAEE,SAAjC,kCAECvC,KAAKJ,MAAMwD,aACVlC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACfJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,YAAYhE,UAAU,0BAArC,cACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,YAAYkB,YAAavF,KAAKJ,MAAMoC,OAAOM,UAAWhB,UAAU,eAAekE,IAAK,SAACC,GAAQR,EAAKG,MAAQK,GAAMC,SAAU1F,KAAK8D,iBAG/I5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,WAAWhE,UAAU,0BAApC,aACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,WAAWkB,YAAavF,KAAKJ,MAAMoC,OAAOO,SAAUjB,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAG5G5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,YAAYhE,UAAU,0BAArC,cACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,YAAYkB,YAAavF,KAAKJ,MAAMoC,OAAOS,UAAWnB,UAAU,eAAeqE,KAAK,OAAOD,SAAU1F,KAAK8D,iBAG1H5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,QAAQhE,UAAU,0BAAjC,iBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOuE,KAAK,QAAQJ,YAAavF,KAAKJ,MAAMoC,OAAOuB,MAAOc,KAAK,QAAQ/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAGnH5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,MAAMhE,UAAU,0BAA/B,YACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOuE,KAAK,MAAMJ,YAAavF,KAAKJ,MAAMoC,OAAOlC,IAAKuE,KAAK,MAAM/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAG7G5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,cAAchE,UAAU,0BAAvC,gBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOuE,KAAK,SAASJ,YAAavF,KAAKJ,MAAMoC,OAAOY,YAAagD,IAAI,MAAMC,IAAI,MAAMxB,KAAK,cAAc/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAGpJ5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,SAAShE,UAAU,0BAAlC,eACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOuE,KAAK,SAASC,IAAI,IAAIC,IAAI,KAAKN,YAAavF,KAAKJ,MAAMoC,OAAOgB,OAAQqB,KAAK,SAAS/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAGvI5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAA,UAAQ0E,SAAUZ,EAAYa,QAAS/F,KAAKiE,aAAc3C,UAAU,mBAApE,QADF,WAEEJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,YAArC,aAMJL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6CAAqCpB,KAAK6B,MAAMyB,GAAhD,kBACApC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,YAArC,kCA9LQG,aAuMVsE,cAAWxC,GCtMpByC,cAEJ,SAAAA,EAAYpE,GAAO,IAAAwB,EAAA,OAAAI,OAAAC,EAAA,EAAAD,CAAAzD,KAAAiG,IACjB5C,EAAAI,OAAAE,EAAA,EAAAF,CAAAzD,KAAAyD,OAAAG,EAAA,EAAAH,CAAAwC,GAAApC,KAAA7D,KAAM6B,KAKRjC,MAAQ,CAAEoC,OAAQ,GAAImB,eAAgB,EAAGC,cAAc,GANpCC,EAQnBvD,IARmB,2DAAAU,OAQ8C6C,EAAKxB,MAAMyB,IAL1ED,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAJ,KAHHA,mFAUC,IAAAtD,EAAAC,KAGlBC,MAAMD,KAAKF,KACRI,KAAK,SAAAC,GAGJ,GADAJ,EAAKY,SAAS,CAAEwC,eAAgBhD,EAASG,OAAQ8C,aAAcjD,EAASC,KACpED,EAASC,GAEX,OAAOD,EAASE,OACX,MAAwB,MAApBF,EAASG,OAEZC,MAAM,uBAGNA,MAAK,QAAAC,OAASL,EAASG,OAAlB,MAAAE,OAA6BL,EAASM,eAGpDP,KAAK,SAAAQ,GAGJX,EAAKY,SAAS,CAAEqB,OAAQtB,MAIzBE,MAAM,SAAAC,GAELC,QAAQC,IAAIF,0CAILqD,GAAG,IAAAK,EAAAvE,KAGdC,MAAMD,KAAKF,IAAK,CAAE2E,OAAQ,WACvBvE,KAAK,SAAAC,GACJ,GAAIA,EAASC,GAEX,OAAOD,EAASG,OACX,MAAIH,EAASG,QAAU,KAAOH,EAASG,OAEtCC,MAAK,QAAAC,OAASL,EAASG,OAAlB,MAAAE,OAA6BL,EAASM,eAMpDP,KAAK,SAAAQ,GAIJI,QAAQC,IAAIL,GAEZ6D,EAAK1C,MAAMkD,QAAQC,KAAK,cAEzBpE,MAAM,SAAAC,GAELC,QAAQC,IAAIF,sCAKhBG,SAASC,MAAT,iBAAAT,OAAkCR,KAAK6B,MAAMyB,IAG7C,IAAMjB,EAAIrC,KAAKJ,MAAMoC,OAErB,OACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BAAmBiB,EAAEC,UAArB,IAAiCD,EAAEE,SAAnC,kCAECvC,KAAKJ,MAAMwD,aACVlC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBACZJ,EAAAC,EAAAC,cAAA,kBAAaF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEC,UAAP,IAAmBD,EAAEE,UAClCrB,EAAAC,EAAAC,cAAA,wBAAmBF,EAAAC,EAAAC,cAAA,UAAKoB,EAAOH,EAAEI,WAAWC,OAAO,eACnDxB,EAAAC,EAAAC,cAAA,sBAAiBF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGuB,KAAMN,EAAEvC,KAAX,aACrBoB,EAAAC,EAAAC,cAAA,2BAAsBF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEkB,OAC7BrC,EAAAC,EAAAC,cAAA,0BAAqBF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEO,YAAP,IAAqBP,EAAEO,YAAc,KAAO,UACjE1B,EAAAC,EAAAC,cAAA,yBAAoBF,EAAAC,EAAAC,cAAA,UAAKiB,EAAEW,WAM/B9B,EAAAC,EAAAC,cAAA,2CAGJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mGACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,UAAQ2E,QAAS/F,KAAKiE,aAAc3C,UAAU,kBAA9C,kBAAH,WACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,YAArC,mBAxGmBG,aA8GZsE,cAAWC,GC/GpBC,cAEJ,SAAAA,EAAYrE,GAAO,IAAAwB,EAAA,OAAAI,OAAAC,EAAA,EAAAD,CAAAzD,KAAAkG,IACjB7C,EAAAI,OAAAE,EAAA,EAAAF,CAAAzD,KAAAyD,OAAAG,EAAA,EAAAH,CAAAyC,GAAArC,KAAA7D,KAAM6B,KAMRjC,MAAQ,CAAE0C,UAAW,GACXC,SAAU,GACVE,UAAW,GACXc,MAAO,GACPzD,IAAK,GACL8C,YAAa,GACbI,OAAQ,IAbCK,EAenBvD,IAAM,0DAZJuD,EAAKS,aAAeT,EAAKS,aAAaC,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAJ,KACpBA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAJ,KAJHA,4EAiBNa,GAIXlE,KAAKW,SAAL8C,OAAAU,EAAA,EAAAV,CAAA,GAAiBS,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,oDAO1CtE,KAAKoF,MAAMC,6CAGAnB,GAAG,IAAAnE,EAAAC,KAKRwE,EAAY,CAAElC,UAAatC,KAAKJ,MAAM0C,UACxBC,SAAYvC,KAAKJ,MAAM2C,SACvBE,UAAazC,KAAKJ,MAAM6C,UACxBc,MAASvD,KAAKJ,MAAM2D,MACpBzD,IAAOE,KAAKJ,MAAME,IAClB8C,YAAe5C,KAAKJ,MAAMgD,YAC1BI,OAAWhD,KAAKJ,MAAMoD,QAE1C/C,MAAMD,KAAKF,IAAK,CACd2E,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KAEpBtE,KAAK,SAAAC,GACJ,GAAIA,EAASC,GAEX,OAAOD,EAASE,OACX,MAAIF,EAASG,QAAU,KAAOH,EAASG,OAEtCC,MAAK,QAAAC,OAASL,EAASG,OAAlB,MAAAE,OAA6BL,EAASM,eAMpDP,KAAK,SAAAQ,GAIJI,QAAQC,IAAIL,GAEZX,EAAK8B,MAAMkD,QAAQC,KAAnB,kBAAAxE,OAA0CE,EAAauC,QAExDrC,MAAM,SAAAC,GAELC,QAAQC,IAAIF,sCAKT,IAAA0D,EAAAvE,KACPgB,SAASC,MAAQ,aAGjB,IAAMiE,EAA6C,IAAhClF,KAAKJ,MAAM0C,UAAU6C,QACU,IAA/BnF,KAAKJ,MAAM2C,SAAS4C,QACY,IAAhCnF,KAAKJ,MAAM6C,UAAU0C,QACa,IAAlCnF,KAAKJ,MAAMgD,YAAYuC,QACK,IAA5BnF,KAAKJ,MAAM2D,MAAM4B,QACY,IAA7BnF,KAAKJ,MAAMoD,OAAOmC,QACQ,IAA1BnF,KAAKJ,MAAME,IAAIqF,OAGlC,OACEjE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0DAEAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAAA,uEACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,YAAYhE,UAAU,0BAArC,cACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,YAAY/C,UAAU,eAAekE,IAAK,SAACC,GAAQlB,EAAKa,MAAQK,GAAMC,SAAU1F,KAAK8D,iBAGrG5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,WAAWhE,UAAU,0BAApC,aACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,WAAW/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAGnE5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,YAAYhE,UAAU,0BAArC,cACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,YAAY/C,UAAU,eAAeqE,KAAK,OAAOD,SAAU1F,KAAK8D,iBAGhF5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,QAAQhE,UAAU,0BAAjC,iBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOuE,KAAK,QAAQJ,YAAY,wBAAwBlB,KAAK,QAAQ/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAGjH5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,MAAMhE,UAAU,0BAA/B,YACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOuE,KAAK,MAAMJ,YAAY,cAAclB,KAAK,MAAM/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAGnG5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,cAAchE,UAAU,0BAAvC,gBACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOuE,KAAK,SAASJ,YAAY,aAAaK,IAAI,MAAMC,IAAI,MAAMxB,KAAK,cAAc/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAGjI5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SAAOkE,QAAQ,SAAShE,UAAU,0BAAlC,eACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,SAAOuE,KAAK,SAASC,IAAI,IAAIC,IAAI,KAAKN,YAAY,cAAclB,KAAK,SAAS/C,UAAU,eAAeoE,SAAU1F,KAAK8D,iBAG1H5C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4BACbJ,EAAAC,EAAAC,cAAA,UAAQ0E,SAAUZ,EAAYa,QAAS/F,KAAKiE,aAAc3C,UAAU,mBAApE,cADF,WAEEJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,UAAU,kBAAkBC,GAAG,YAArC,qBA/IaG,aAyJZsE,cAAWE,mBCjJ1BC,IAAQC,IAAIC,IAAoBC,SA8BjBC,mLA1BX,OACErF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAACoF,EAAD,MACAtF,EAAAC,EAAAC,cAACqF,EAAD,CAAQnF,UAAU,0BAClBJ,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,KACExF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAO5F,EAAAC,EAAAC,cAAC2F,EAAD,SACrC7F,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAO5F,EAAAC,EAAAC,cAACzB,EAAD,SAC5CuB,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,OAAQ,kBAAO5F,EAAAC,EAAAC,cAAC4F,EAAD,SAClD9F,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,OAAQ,SAACjF,GAAD,OAAYX,EAAAC,EAAAC,cAAC6F,EAAD,CAAc3D,GAAIzB,EAAMqF,MAAMC,OAAO7D,QAChGpC,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,OAAQ,SAACjF,GAAD,OAAYX,EAAAC,EAAAC,cAACgG,EAAD,CAAY9D,GAAIzB,EAAMqF,MAAMC,OAAO7D,QAC5FpC,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,qBAAqBC,OAAQ,SAACjF,GAAD,OAAYX,EAAAC,EAAAC,cAACiG,EAAD,CAAc/D,GAAIzB,EAAMqF,MAAMC,OAAO7D,QAChGpC,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAOG,OAAQ,kBAAO5F,EAAAC,EAAAC,cAACkG,EAAD,UAGxBpG,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,+CArBQM,aA+BZ6F,EAAS,WACb,OACErG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2CAOFoG,EAAS,WACb,OACEtG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,IAAID,UAAU,gBAAvB,cAIFJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBACZJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,YAAT,oBAEFL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,GAAG,kBAAT,qBAUNkG,EAAO,WACX,OACEvG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4GAEAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,6CAA6CyB,OAAO,UAA5D,8BACJlD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,+CAA+CyB,OAAO,UAA9D,oEAENlD,EAAAC,EAAAC,cAAA,mBAMAsG,EAAW,WACf,OACExG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,kDACAF,EAAAC,EAAAC,cAAA,mBCxFcuG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASZ,MACvB,2DCXNa,IAASjB,OACL5F,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,KACI9G,EAAAC,EAAAC,cAAC6G,EAAD,OAEFjH,SAASkH,eAAe,SDsHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnI,KAAK,SAAAoI,GACjCA,EAAaC","file":"static/js/main.30b40ab0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as moment from 'moment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './App.css';\r\n\r\nclass PersonList extends Component {\r\n\r\n  // Class properties \r\n\r\n  state = { persons: [] };\r\n\r\n  url = \"https://obscure-retreat-90885.herokuapp.com/api/persons\";\r\n\r\n  componentDidMount() {\r\n\r\n    // Get all\r\n    fetch(this.url)\r\n      .then(response => {\r\n        // Optional...\r\n        //this.setState({ httpStatusCode: response.status, httpStatusOk: response.ok });\r\n        if (response.ok) {\r\n          // Parse the response body as JSON\r\n          return response.json();\r\n        } else if (response.status === 404) {\r\n          // Not found \r\n          throw Error('HTTP 404, Not found');\r\n        } else {\r\n          // Some other situation\r\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\r\n        }\r\n      })\r\n      .then(responseData => {\r\n        // \"responseData\" is an object; here, we're interested in its \"data\" property\r\n        // Study the shape of the data in the web service\r\n        this.setState({ persons: responseData });\r\n        // Optional...\r\n        //console.log(responseData);\r\n      })\r\n      .catch(error => {\r\n        // Handles an error thrown above, as well as network general errors\r\n        console.log(error)\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n    document.title = 'Person list';\r\n\r\n    return (\r\n      <div>\r\n        <h4>List of persons, from the deployed web service</h4>\r\n        <p><Link className='btn btn-default' to='/person/create'>Add a new person</Link></p>\r\n        <table className='table table-striped'>\r\n          <TableHeader />\r\n          <TableBody persons={this.state.persons} />\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonList;\r\n\r\n// ############################################################\r\n// Most of the following was copied from the react-tania-updated code example\r\n// ############################################################\r\n\r\n// Function component, table header\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Birth date</th>\r\n        <th>Web site</th>\r\n        <th>Credit score</th>\r\n        <th>Risk rating</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\n// Function component\r\n// Its purpose is to render the HTML table body element\r\nconst TableBody = (props) => {\r\n\r\n  // Using the array of objects, create a new array of React elements\r\n  let rows = props.persons.map((person, index) => {\r\n    return (\r\n      <TableRow person={person} key={index} />\r\n    );\r\n  });\r\n\r\n  return <tbody>{rows}</tbody>\r\n}\r\n\r\n// Function component\r\n// Its purpose is to render a single HTML table row\r\nconst TableRow = props => {\r\n\r\n  // For coding convenience (below), create a very short variable name\r\n  const u = props.person;\r\n\r\n  // Alternative declaration syntax...\r\n  //const { u } = this.props;\r\n\r\n  // Render the row\r\n  return (\r\n    <tr>\r\n      <td>{u.firstName + ' ' + u.lastName}</td>\r\n      <td>{moment(u.birthDate).format('gggg-MM-DD')}</td>\r\n      <td><a href={u.url}>Web site</a></td>\r\n      <td>{u.creditScore}{u.creditScore > 600 && <FontAwesomeIcon icon=\"check-circle\" color=\"green\"/>}</td>\r\n      <td>{u.rating}{u.rating < 10 && <FontAwesomeIcon icon=\"exclamation-circle\" color=\"red\" />}</td>\r\n      <td><Link className='btn btn-default' to={`/person/detail/${u._id}`}>Details</Link>&nbsp;&nbsp;\r\n            <Link className='btn btn-warning' to={`/person/edit/${u._id}`}>Edit</Link>&nbsp;&nbsp;\r\n            <Link className='btn btn-danger' to={`/person/delete/${u._id}`}>Delete</Link></td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport * as moment from 'moment';\r\nimport './App.css';\r\n\r\nclass PersonDetail extends Component {\r\n\r\n  // Class properties \r\n\r\n  state = { person: {}, httpStatusCode: 0, httpStatusOk: false };\r\n\r\n  url = `https://obscure-retreat-90885.herokuapp.com/api/persons/${this.props.id}`;\r\n\r\n  componentDidMount() {\r\n\r\n    // Get one\r\n    fetch(this.url)\r\n      .then(response => {\r\n        // Optional...\r\n        this.setState({ httpStatusCode: response.status, httpStatusOk: response.ok });\r\n        if (response.ok) {\r\n          // Parse the response body as JSON\r\n          return response.json();\r\n        } else if (response.status === 404) {\r\n          // Not found \r\n          throw Error('HTTP 404, Not found');\r\n        } else {\r\n          // Some other situation\r\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\r\n        }\r\n      })\r\n      .then(responseData => {\r\n        // \"responseData\" is an object; here, we're interested in its \"data\" property\r\n        // Study the shape of the data in the reqres.in service\r\n        this.setState({ person: responseData});\r\n        // Optional...\r\n        //console.log(responseData.data);\r\n      })\r\n      .catch(error => {\r\n        // Handles an error thrown above, as well as network general errors\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  render() {\r\n    document.title = `Person ${this.props.id} detail`;\r\n\r\n    // For coding convenience, create a shortcut object\r\n    const u = this.state.person;\r\n\r\n    return (\r\n      <div>\r\n        <h4>Detail about person {u.firstName} {u.lastName} from the deployed web service</h4>\r\n\r\n        {/* <p>HTTP response status code was {this.state.httpStatusCode}</p> */}\r\n\r\n        {this.state.httpStatusOk ? (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <dl className=\"dl-horizontal\">\r\n                <dt>Name</dt><dd>{u.firstName} {u.lastName}</dd>\r\n                <dt>Birth date</dt><dd>{moment(u.birthDate).format('DD-MM-gggg')}</dd>\r\n                <dt>Web site</dt><dd><a href={u.url}>Web site</a></dd>\r\n                <dt>Email address</dt><dd>{u.email}</dd>\r\n                <dt>Credit score</dt><dd>{u.creditScore} {u.creditScore > 600 && \"- good\"}</dd>\r\n                <dt>Risk rating</dt><dd>{u.rating}</dd>\r\n              </dl>\r\n            </div>\r\n          </div>\r\n\r\n        ) : (\r\n          <p>Requested person was not found</p>\r\n          )}\r\n\r\n        <hr />\r\n        <p><Link className='btn btn-warning' to={`/persons/edit/${u.id}`}>Edit</Link>&nbsp;&nbsp;\r\n        <Link className='btn btn-default' to='/persons'>Show list of persons</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PersonDetail;\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass PersonEdit extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  // Class properties \r\n\r\n  state = { person: {},\r\n            firstName: '',\r\n            lastName: '',\r\n            birthDate: '',\r\n            email: '',\r\n            url: '',\r\n            creditScore: '',\r\n            rating: '', \r\n            httpStatusCode: 0,\r\n            httpStatusOk: false\r\n          };\r\n\r\n  url = `https://obscure-retreat-90885.herokuapp.com/api/persons/${this.props.id}`;\r\n\r\n  handleChange(e) {\r\n    // Same as the \"add one\" use case\r\n    this.setState({ [e.target.name]: e.target.value });\r\n\r\n    // Can also do data validation in here\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    // Get one\r\n    fetch(this.url)\r\n      .then(response => {\r\n        // Optional...\r\n        this.setState({ httpStatusCode: response.status, httpStatusOk: response.ok });\r\n        if (response.ok) {\r\n          // Parse the response body as JSON\r\n          return response.json();\r\n        } else if (response.status === 404) {\r\n          // Not found \r\n          throw Error('HTTP 404, Not found');\r\n        } else {\r\n          // Some other situation\r\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\r\n        }\r\n      })\r\n      .then(responseData => {\r\n        // \"responseData\" is an object; here, we're interested in its \"data\" property\r\n        // Study the shape of the data in the reqres.in service\r\n        this.setState({ person: responseData });\r\n        // Optional...\r\n        //console.log(responseData.data);\r\n      })\r\n      .catch(error => {\r\n        // Handles an error thrown above, as well as network general errors\r\n        console.log(error)\r\n      });\r\n\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    // For coding convenience\r\n    const newPerson = { '_id': this.state.person._id,\r\n                        'firstName': this.state.firstName,\r\n                        'lastName': this.state.lastName,\r\n                        'birthDate': this.state.birthDate,\r\n                        'email': this.state.email,\r\n                        'url': this.state.url,\r\n                        'creditScore': this.state.creditScore,\r\n                        'rating':  this.state.rating};\r\n\r\n    // Edit existing\r\n    fetch(this.url, {\r\n      method: 'PUT',\r\n      headers: { \"Content-Type\": 'application/json' },\r\n      body: JSON.stringify(newPerson)\r\n    })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // Parse the response body as JSON\r\n          return response.json();\r\n        } else if (response.status >= 400 && response.status < 500) {\r\n          // Error caused by the requestor\r\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\r\n        } else {\r\n          // Some other situation\r\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\r\n        }\r\n      })\r\n      .then(responseData => {\r\n        // \"responseData\" is an object\r\n        // Study the shape of the data in the reqres.in service\r\n        // Optional...\r\n        console.log(responseData);\r\n        // The identifier \"id\" can be used to redirect\r\n        this.props.history.push(`/person/detail/${this.props.id}`);\r\n      })\r\n      .catch(error => {\r\n        // Handles an error thrown above, as well as network general errors\r\n        console.log(error)\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n    document.title = `Person ${this.props.id} edit`;\r\n\r\n    // Determine the button state\r\n    const isDisabled = this.state.firstName.length === 0 ||\r\n                       this.state.lastName.length === 0 ||\r\n                       this.state.birthDate.length === 0 ||\r\n                       this.state.creditScore.length === 0  ||\r\n                       this.state.email.length === 0 ||\r\n                       this.state.rating.length === 0 ||\r\n                       this.state.url.length === 0;\r\n\r\n    // For coding convenience, create a shortcut object\r\n    const u = this.state.person;\r\n\r\n    // If \"this.input\" exists (it will only get rendered if a form exists), set its focus\r\n    if (this.input && this.state.firstName.length === 0 && this.state.lastName.length === 0) {\r\n      this.input.focus();\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h4>Edit person {u.firstName} {u.lastName} from the deployed web service</h4>\r\n\r\n        {this.state.httpStatusOk ? (\r\n          <div className=\"form-horizontal\">\r\n            <p>Edit person data, and click/tap the Save button</p>\r\n            <hr />\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"firstName\" className='control-label col-md-2'>First Name</label>\r\n            <div className=\"col-md-6\">\r\n              <input name=\"firstName\" placeholder={this.state.person.firstName} className=\"form-control\" ref={(i) => { this.input = i; }} onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lastName\" className='control-label col-md-2'>Last Name</label>\r\n            <div className=\"col-md-6\">\r\n              <input name=\"lastName\" placeholder={this.state.person.lastName} className=\"form-control\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"birthDate\" className='control-label col-md-2'>Birth date</label>\r\n            <div className=\"col-md-3\">\r\n              <input name=\"birthDate\" placeholder={this.state.person.birthDate} className=\"form-control\" type=\"date\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\" className='control-label col-md-2'>Email address</label>\r\n            <div className=\"col-md-6\">\r\n              <input type=\"email\" placeholder={this.state.person.email} name=\"email\" className=\"form-control\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"url\" className='control-label col-md-2'>Web site</label>\r\n            <div className=\"col-md-6\">\r\n              <input type=\"url\" placeholder={this.state.person.url} name=\"url\" className=\"form-control\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"creditScore\" className='control-label col-md-2'>Credit score</label>\r\n            <div className=\"col-md-3\">\r\n              <input type=\"number\" placeholder={this.state.person.creditScore} min=\"200\" max=\"800\" name=\"creditScore\" className=\"form-control\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"rating\" className='control-label col-md-2'>Risk rating</label>\r\n            <div className=\"col-md-3\">\r\n              <input type=\"number\" min=\"5\" max=\"20\" placeholder={this.state.person.rating} name=\"rating\" className=\"form-control\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n              <div className=\"col-md-offset-2 col-md-6\">\r\n                <button disabled={isDisabled} onClick={this.handleSubmit} className=\"btn btn-primary\">Save</button>&nbsp;&nbsp;\r\n                <Link className='btn btn-default' to='/persons'>Cancel</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        ) : (\r\n            <div>\r\n              <p>Requested person with identifier {this.props.id} was not found</p>\r\n              <hr />\r\n              <p><Link className='btn btn-default' to='/persons'>Show list of persons</Link></p>\r\n            </div>\r\n          )}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PersonEdit);\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport * as moment from 'moment';\r\nimport './App.css';\r\n\r\nclass PersonDelete extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  state = { person: {}, httpStatusCode: 0, httpStatusOk: false };\r\n\r\n  url = `https://obscure-retreat-90885.herokuapp.com/api/persons/${this.props.id}`;\r\n\r\n  componentDidMount() {\r\n\r\n    // Get the requested object\r\n    fetch(this.url)\r\n      .then(response => {\r\n        // Optional...\r\n        this.setState({ httpStatusCode: response.status, httpStatusOk: response.ok });\r\n        if (response.ok) {\r\n          // Parse the response body as JSON\r\n          return response.json();\r\n        } else if (response.status === 404) {\r\n          // Not found \r\n          throw Error('HTTP 404, Not found');\r\n        } else {\r\n          // Some other situation\r\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\r\n        }\r\n      })\r\n      .then(responseData => {\r\n        // \"responseData\" is an object; here, we're interested in its \"data\" property\r\n        // Study the shape of the data in the reqres.in service\r\n        this.setState({ person: responseData});\r\n        // Optional...\r\n        //console.log(responseData.data);\r\n      })\r\n      .catch(error => {\r\n        // Handles an error thrown above, as well as network general errors\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n\r\n    // Delete\r\n    fetch(this.url, { method: 'DELETE' })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // Parse the response body as JSON\r\n          return response.status;\r\n        } else if (response.status >= 400 && response.status < 500) {\r\n          // Error caused by the requestor\r\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\r\n        } else {\r\n          // Some other situation\r\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\r\n        }\r\n      })\r\n      .then(responseData => {\r\n        // \"responseData\" is an integer (probably 204)\r\n        // Study the shape of the data in the reqres.in service\r\n        // Optional...\r\n        console.log(responseData);\r\n        // Redirect\r\n        this.props.history.push('/persons');\r\n      })\r\n      .catch(error => {\r\n        // Handles an error thrown above, as well as network general errors\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  render() {\r\n    document.title = `Delete person ${this.props.id}`;\r\n\r\n    // For coding convenience, create a shortcut object\r\n    const u = this.state.person;\r\n\r\n    return (\r\n      <div>\r\n        <h4>Delete person {u.firstName} {u.lastName} from the deployed web service</h4>\r\n\r\n        {this.state.httpStatusOk ? (\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <dl className=\"dl-horizontal\">\r\n                <dt>Name</dt><dd>{u.firstName} {u.lastName}</dd>\r\n                <dt>Birth date</dt><dd>{moment(u.birthDate).format('DD-MM-gggg')}</dd>\r\n                <dt>Web site</dt><dd><a href={u.url}>Web site</a></dd>\r\n                <dt>Email address</dt><dd>{u.email}</dd>\r\n                <dt>Credit score</dt><dd>{u.creditScore} {u.creditScore > 600 && \"- good\"}</dd>\r\n                <dt>Risk rating</dt><dd>{u.rating}</dd>\r\n              </dl>\r\n            </div>\r\n          </div>\r\n\r\n        ) : (\r\n            <p>Requested person was not found</p>\r\n          )}\r\n\r\n        <hr />\r\n        <p>Confirm that this person should be deleted, or cancel to return to the list of persons</p>\r\n        <p><button onClick={this.handleSubmit} className=\"btn btn-danger\">Confirm delete</button>&nbsp;&nbsp;\r\n        <Link className='btn btn-default' to='/persons'>Cancel</Link></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(PersonDelete);\r\n","import React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport './App.css';\n\nclass PersonCreate extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  state = { firstName: '',\n            lastName: '',\n            birthDate: '',\n            email: '',\n            url: '',\n            creditScore: '',\n            rating: '' };\n\n  url = \"https://obscure-retreat-90885.herokuapp.com/api/persons\";\n\n  handleChange(e) {\n    // https://medium.com/@tmkelly28/handling-multiple-form-inputs-in-react-c5eb83755d15\n    // Bottom line, new ES6 feature, bracket notation, computed property names\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#Computed_property_names\n    this.setState({ [e.target.name]: e.target.value });\n    //console.log(`Name: ${this.state.name}, Job: ${this.state.job}`);\n\n    // Can also do data validation in here\n  }\n\n  componentDidMount() {\n    this.input.focus();\n  }\n\n  handleSubmit(e) {\n\n    // Turn off default form handling\n    //e.preventDefault();\n\n    const newPerson = { 'firstName': this.state.firstName,\n                        'lastName': this.state.lastName,\n                        'birthDate': this.state.birthDate,\n                        'email': this.state.email,\n                        'url': this.state.url,\n                        'creditScore': this.state.creditScore,\n                        'rating':  this.state.rating};\n\n    fetch(this.url, {\n      method: 'POST',\n      headers: { \"Content-Type\": 'application/json' },\n      body: JSON.stringify(newPerson)\n    })\n      .then(response => {\n        if (response.ok) {\n          // Parse the response body as JSON\n          return response.json();\n        } else if (response.status >= 400 && response.status < 500) {\n          // Error caused by the requestor\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\n        } else {\n          // Some other situation\n          throw Error(`HTTP ${response.status}, ${response.statusText}`);\n        }\n      })\n      .then(responseData => {\n        // \"responseData\" is an object\n        // Study the shape of the data in the reqres.in service\n        // Optional...\n        console.log(responseData);\n        // The identifier \"id\" can be used to redirect\n        this.props.history.push(`/person/detail/${responseData._id}`);\n      })\n      .catch(error => {\n        // Handles an error thrown above, as well as network general errors\n        console.log(error)\n      });\n\n  }\n\n  render() {\n    document.title = 'Add person';\n\n    // Determine the button state\n    const isDisabled = this.state.firstName.length === 0 ||\n                       this.state.lastName.length === 0 ||\n                       this.state.birthDate.length === 0 ||\n                       this.state.creditScore.length === 0  ||\n                       this.state.email.length === 0 ||\n                       this.state.rating.length === 0 ||\n                       this.state.url.length === 0;\n                       \n\n    return (\n      <div>\n        <h4>Add a new person to the deployed web service</h4>\n        {/* <form onSubmit={this.handleSubmit}> */}\n        <div className=\"form-horizontal\">\n          <p>Enter new person data, and click/tap the Add Person button</p>\n          <hr />\n          <div className=\"form-group\">\n            <label htmlFor=\"firstName\" className='control-label col-md-2'>First Name</label>\n            <div className=\"col-md-6\">\n              <input name=\"firstName\" className=\"form-control\" ref={(i) => { this.input = i; }} onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"lastName\" className='control-label col-md-2'>Last Name</label>\n            <div className=\"col-md-6\">\n              <input name=\"lastName\" className=\"form-control\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"birthDate\" className='control-label col-md-2'>Birth date</label>\n            <div className=\"col-md-3\">\n              <input name=\"birthDate\" className=\"form-control\" type=\"date\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\" className='control-label col-md-2'>Email address</label>\n            <div className=\"col-md-6\">\n              <input type=\"email\" placeholder=\"A valid email address\" name=\"email\" className=\"form-control\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"url\" className='control-label col-md-2'>Web site</label>\n            <div className=\"col-md-6\">\n              <input type=\"url\" placeholder=\"A valid URL\" name=\"url\" className=\"form-control\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"creditScore\" className='control-label col-md-2'>Credit score</label>\n            <div className=\"col-md-3\">\n              <input type=\"number\" placeholder=\"200 to 800\" min=\"200\" max=\"800\" name=\"creditScore\" className=\"form-control\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"rating\" className='control-label col-md-2'>Risk rating</label>\n            <div className=\"col-md-3\">\n              <input type=\"number\" min=\"5\" max=\"20\" placeholder=\"5.0 to 20.0\" name=\"rating\" className=\"form-control\" onChange={this.handleChange} />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-md-offset-2 col-md-6\">\n              <button disabled={isDisabled} onClick={this.handleSubmit} className=\"btn btn-primary\">Add Person</button>&nbsp;&nbsp;\n              <Link className='btn btn-default' to='/persons'>Cancel</Link>\n            </div>\n          </div>\n        </div>\n        {/* </form> */}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(PersonCreate);\n","import React, { Component } from 'react';\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport './App.css';\nimport PersonList from './PersonList';\nimport PersonDetail from './PersonDetail';\nimport PersonEdit from './PersonEdit';\nimport PersonDelete from './PersonDelete';\nimport PersonCreate from './PersonCreate';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationCircle,faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faExclamationCircle,faCheckCircle)\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <Navbar className=\"navbar navbar-default\" />\n        <hr />\n\n        <Switch>\n          <Route exact path='/' render={() => (<Home />)} />\n          <Route exact path='/Persons' render={() => (<PersonList />)} />\n          <Route exact path='/Person/create' render={() => (<PersonCreate />)} />\n          <Route exact path='/Person/detail/:id' render={(props) => (<PersonDetail id={props.match.params.id} />)} />\n          <Route exact path='/Person/edit/:id' render={(props) => (<PersonEdit id={props.match.params.id} />)} />\n          <Route exact path='/Person/delete/:id' render={(props) => (<PersonDelete id={props.match.params.id} />)} />\n          <Route render={() => (<NotFound />)} />\n        </Switch>\n\n        <p>&nbsp;</p>\n        <hr />\n        <footer>\n          <p>&copy; 2019, Arshdeep Singh</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// Function component for the top-of-view header\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"row\">\n        <h2>Assignment 1</h2>\n        <p>Arshdeep singh | #133462176</p>\n      </div>\n    </div>\n  );\n}\n\n// Function component for the navigation bar \nconst Navbar = () => {\n  return (\n    <div className=\"container-fluid navbar-outline\">\n      <div className=\"navbar-header\">\n        <Link to='/' className='navbar-brand'>Home page</Link>\n      </div>\n\n      {/* <!-- All the navigation links are in the following div --> */}\n      <div>\n        <ul className=\"nav navbar-nav\">\n          <li>\n            <Link to='/persons'>List of persons</Link>\n          </li>\n          <li>\n            <Link to='/person/create'>Add a person</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n  );\n}\n\n// Function component for a content area\nconst Home = () => {\n  return (\n    <div>\n      <p>A React app with the purpose of demonstrating\n         the topics in the first five weeks of the course.</p>\n      <ul>\n        <li><a href=\"https://fast-headland-59503.herokuapp.com/\" target=\"_blank\">Heroku-hosted (React) app</a></li>\n        <li><a href=\"https://obscure-retreat-90885.herokuapp.com/\" target=\"_blank\">Heroku-hosted MongoDB + Express.js + Node.js (MEN) web service</a></li>\n      </ul>\n      <p>&nbsp;</p>\n    </div>\n  );\n}\n\n// Function component for a content area\nconst NotFound = () => {\n  return (\n    <div>\n      <p>The requested resource was not found.</p>\n      <p>&nbsp;</p>\n    </div>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}